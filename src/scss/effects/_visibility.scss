// Copyright 2024 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================
// StyleScape | Effects | Visibilty
// ============================================================================


* {
  visibility: inherit;
}

@mixin visible {
  visibility: visible;
  // display: inherit;
}

@mixin invisible {
  visibility: hidden;
  // display: none;
}

.visible {
  @include visible;
}
  
.invisible {
  @include invisible;
}





// Base Collapse Class
// Hides the element when it does not have the 'show' class
.collapse {
  &:not(.show) {
      display: none;
  }
}

// Collapsing Transition Class
// Manages the transition for collapsing and expanding
// .collapsing {
//   // Initialize collapsed state
//   height: 0;
//   overflow: hidden;

//   // Apply transition for vertical collapse (default)
//   @include transition($transition-collapse);

//   // Modifier for horizontal collapse
//   // Changes transition to affect width instead of height
//   &.collapse-horizontal {
//       width: 0;
//       height: auto; // Maintain natural height during horizontal collapse

//       // Apply transition for horizontal collapse
//       @include transition($transition-collapse-width);
//   }

//   // Optional: Modifier for fade effect during collapse
//   &.collapse-fade {
//       opacity: 0;

//       // Combine height/width transition with opacity transition
//       @include transition($transition-collapse, opacity $transition-duration $transition-timing-function);
//   }
// }

// Expand Class - Optional
// This class can be used to control expanded state if needed
.expand {
  display: block;
  height: auto;
  width: auto;
  opacity: 1; // Reset opacity in case of fade effect
}




// // scss-docs-start collapse-classes
// .collapse {
//     &:not(.show) {
//     display: none;
//     }
// }

// .collapsing {
//     height: 0;
//     overflow: hidden;
//     @include transition($transition-collapse);

//     &.collapse-horizontal {
//     width: 0;
//     height: auto;
//     @include transition($transition-collapse-width);
//     }
// }
// // scss-docs-end collapse-classes
